version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: cat-api-postgres
    platform: linux/amd64
    environment:
      POSTGRES_DB: cat_api_db
      POSTGRES_USER: catapi
      POSTGRES_PASSWORD: catapi123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U catapi -d cat_api_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - cat-api-network

  redis:
    image: redis:7-alpine
    platform: linux/amd64
    container_name: cat-api-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cat-api-network

  cat-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cat-api-app
    platform: linux/amd64
    ports:
      - "8090:8090"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/cat_api_db
      SPRING_DATASOURCE_USERNAME: catapi
      SPRING_DATASOURCE_PASSWORD: catapi123
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_LIQUIBASE_CHANGE_LOG: classpath:db/changelog/db.changelog-master.xml
      CAT_API_BASE_URL: https://api.thecatapi.com/v1
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info,metrics,prometheus
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cat-api-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  cat-api-network:
    driver: bridge
